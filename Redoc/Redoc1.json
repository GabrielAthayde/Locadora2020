{
  "openapi": "3.0.1",
  "info": {
    "title": "Infolytics.Integration.API",
    "version": "v1"
  },
  "paths": {
    "/api/Auth": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Get authorization token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestTokenModelAPI"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestTokenModelAPI"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestTokenModelAPI"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response with AccessToken",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "404": {
            "description": "Incorrect credentials",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AuthFail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthFail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthFail"
                }
              }
            }
          }
        }
      }
    },
    "/api/Auth/SessionToken": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestSessionTokenModelAPI"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestSessionTokenModelAPI"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestSessionTokenModelAPI"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SessionTokenValue"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionTokenValue"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionTokenValue"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AuthFail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthFail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthFail"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/Design": {
      "post": {
        "tags": [
          "Design"
        ],
        "summary": "Add a new design register",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostDesignModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PostDesignModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PostDesignModel"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Returns that Design Json is valid and that it was sent to Service Bus"
          },
          "400": {
            "description": "If the input is invalid, return a array with all errors",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v{version}/Design/Items": {
      "post": {
        "tags": [
          "Design"
        ],
        "summary": "Add a list of items in a specific design",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostDesignItemsModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PostDesignItemsModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PostDesignItemsModel"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Returns that Design Items Json is valid and that it was sent to Service Bus"
          },
          "400": {
            "description": "If the input is invalid, return a array with all errors",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Design"
        ],
        "summary": "Update the list of items in a specific design",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDesignItemsModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDesignItemsModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDesignItemsModel"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Returns that Design Update Json is valid and that it was sent to Service Bus"
          },
          "400": {
            "description": "If the input is invalid, return a array with all errors",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v{version}/Design/Users": {
      "post": {
        "tags": [
          "Design"
        ],
        "summary": "Add a list of users in a specific design",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostDesignUsersModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PostDesignUsersModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PostDesignUsersModel"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Returns that Design Users Json is valid and that it was sent to Service Bus"
          },
          "400": {
            "description": "If the input is invalid, return a array with all errors",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v{version}/Design/Presets": {
      "post": {
        "tags": [
          "Design"
        ],
        "summary": "Add a list of presets informations in a specific design",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostDesignPresetsModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PostDesignPresetsModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PostDesignPresetsModel"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Returns that Design Presets Json is valid and that it was sent to Service Bus"
          },
          "400": {
            "description": "If the input is invalid, return a array with all errors",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Design"
        ],
        "summary": "Update presets informations in a specific design",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDesignPresetsModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDesignPresetsModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDesignPresetsModel"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Returns that Design Update Json is valid and that it was sent to Service Bus"
          },
          "400": {
            "description": "If the input is invalid, return a array with all errors",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v{version}/Design/SpaceAndShape": {
      "patch": {
        "tags": [
          "Design"
        ],
        "summary": "Update the Shape and/or Space value in a specific design",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDesignSpaceAndShapeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDesignSpaceAndShapeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDesignSpaceAndShapeModel"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Returns that Design Update Json is valid and that it was sent to Service Bus"
          },
          "400": {
            "description": "If the input is invalid, return a array with all errors",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v{version}/Design/Situation": {
      "patch": {
        "tags": [
          "Design"
        ],
        "summary": "Update the Situation value in a specific design",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDesignSituationModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDesignSituationModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDesignSituationModel"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Returns that Design Update Json is valid and that it was sent to Service Bus"
          },
          "400": {
            "description": "If the input is invalid, return a array with all errors",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v{version}/Design/CurrentStep": {
      "patch": {
        "tags": [
          "Design"
        ],
        "summary": "Update the CurrentStep value in a specific design",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDesignCurrentStepModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDesignCurrentStepModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDesignCurrentStepModel"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Returns that Design Update Json is valid and that it was sent to Service Bus"
          },
          "400": {
            "description": "If the input is invalid, return a array with all errors",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v{version}/Design/Principal": {
      "patch": {
        "tags": [
          "Design"
        ],
        "summary": "Update the Principal value in a specific design",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDesignPrincipalModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDesignPrincipalModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDesignPrincipalModel"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Returns that Design Update Json is valid and that it was sent to Service Bus"
          },
          "400": {
            "description": "If the input is invalid, return a array with all errors",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v{version}/Design/Customer": {
      "patch": {
        "tags": [
          "Design"
        ],
        "summary": "Update the Customer value in a specific design",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDesignCustomerModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDesignCustomerModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDesignCustomerModel"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Returns that Design Update Json is valid and that it was sent to Service Bus"
          },
          "400": {
            "description": "If the input is invalid, return a array with all errors",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v{version}/Design/Quantities": {
      "patch": {
        "tags": [
          "Design"
        ],
        "summary": "Update the Quantities values in a specific design",
        "description": "Is possible update a specific property or all properties of \"Quantities\". At least one property must be sent in the \"Quantities\" object.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDesignQuantitiesModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDesignQuantitiesModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDesignQuantitiesModel"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Returns that Design Update Json is valid and that it was sent to Service Bus"
          },
          "400": {
            "description": "If the input is invalid, return a array with all errors",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v{version}/Design/SentEcommerce": {
      "patch": {
        "tags": [
          "Design"
        ],
        "summary": "Update the SentEcommerce value in a specific design",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDesignSentEcommerceModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDesignSentEcommerceModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDesignSentEcommerceModel"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Returns that Design Update Json is valid and that it was sent to Service Bus"
          },
          "400": {
            "description": "If the input is invalid, return a array with all errors",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v{version}/Design/Started": {
      "patch": {
        "tags": [
          "Design"
        ],
        "summary": "Update the Started value in a specific design",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDesignStartedModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDesignStartedModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDesignStartedModel"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Returns that Design Update Json is valid and that it was sent to Service Bus"
          },
          "400": {
            "description": "If the input is invalid, return a array with all errors",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v{version}/Design/Values": {
      "patch": {
        "tags": [
          "Design"
        ],
        "summary": "Update the Values in a specific design",
        "description": "Is possible update a specific property or all properties of \"Values\". At least one property must be sent in the \"Values\" object.",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDesignValuesModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDesignValuesModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDesignValuesModel"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Returns that Design Update Json is valid and that it was sent to Service Bus"
          },
          "400": {
            "description": "If the input is invalid, return a array with all errors",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v{version}/Design/Presets/Information": {
      "patch": {
        "tags": [
          "Design"
        ],
        "summary": "Update properties of specific informations step in a specific design",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDesignPresetsInformationModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDesignPresetsInformationModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDesignPresetsInformationModel"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Returns that Design Update Json is valid and that it was sent to Service Bus"
          },
          "400": {
            "description": "If the input is invalid, return a array with all errors",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "Design"
        ],
        "summary": "Add new preset informations in a specific design",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDesignAddPresetsInformationModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDesignAddPresetsInformationModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDesignAddPresetsInformationModel"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Returns that Design Update Json is valid and that it was sent to Service Bus"
          },
          "400": {
            "description": "If the input is invalid, return a array with all errors",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v{version}/Design/user": {
      "put": {
        "tags": [
          "Design"
        ],
        "summary": "Add a new user in a specific design",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDesignAddUserModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDesignAddUserModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDesignAddUserModel"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Returns that Design Update Json is valid and that it was sent to Service Bus"
          },
          "400": {
            "description": "If the input is invalid, return a array with all errors",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v{version}/Login": {
      "post": {
        "tags": [
          "Login"
        ],
        "summary": "Add a new login register",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostLoginModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PostLoginModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PostLoginModel"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Returns that Login Json is valid and that it was sent to Service Bus"
          },
          "400": {
            "description": "If the input is invalid, return a array with all errors",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v{version}/Logoff": {
      "post": {
        "tags": [
          "Logoff"
        ],
        "summary": "Add a new logoff register",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostLogoffModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PostLogoffModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PostLogoffModel"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Returns that Logoff Json is valid and that it was sent to Service Bus"
          },
          "400": {
            "description": "If the input is invalid, return a array with all errors",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v{version}/Operation": {
      "post": {
        "tags": [
          "Operation"
        ],
        "summary": "Add a new Operation register",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostOperationModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PostOperationModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PostOperationModel"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Returns that Operation Json is valid and that it was sent to Service Bus"
          },
          "400": {
            "description": "If the input is invalid, return a array with all errors",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v{version}/Operation/Update": {
      "post": {
        "tags": [
          "Operation"
        ],
        "summary": "Add a new Operation Update register",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostOperationUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PostOperationUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PostOperationUpdateModel"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Returns that Operation Update Json is valid and that it was sent to Service Bus"
          },
          "400": {
            "description": "If the input is invalid, return a array with all errors",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v{version}/Search": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Add a new search data",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostDesignSearchModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PostDesignSearchModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PostDesignSearchModel"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Returns that Search Json is valid and that it was sent to Service Bus"
          },
          "400": {
            "description": "If the input is invalid, return a array with all errors",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v{version}/UX": {
      "post": {
        "tags": [
          "UX"
        ],
        "summary": "Add a new ux event data",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostUXEventModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PostUXEventModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PostUXEventModel"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Returns that UX Event Json is valid and that it was sent to Service Bus"
          },
          "400": {
            "description": "If the input is invalid, return a array with all errors",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AuthFail": {
        "type": "object",
        "properties": {
          "authenticated": {
            "type": "boolean",
            "readOnly": true
          },
          "message": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PostDesignItemsModel": {
        "required": [
          "object"
        ],
        "type": "object",
        "properties": {
          "object": {
            "minLength": 1,
            "type": "string",
            "description": "Json on string format",
            "example": "{\"designId\":\"{design id}\",\"schemaVersion\":\"1.0\",\"environment\":\"Production\",\"hostname\":\"https://homedepot.com\",\"product\":{\"id\":\"c66947d1-6713-447e-9cea-087554c37327\",\"name\":\"{product name, e.g: Ideal Spaces}\",\"version\":\"10\",\"release\":\"9.12\"},\"tagId\":\"DS-6\",\"company\":{\"id\":\"{company id}\",\"name\":\"{company name}\"},\"creation\":\"2021-05-24 15:50:55+02:00\",\"itemsInformation\":[{\"item\":{\"id\":\"bdb407b2-468c-4901-bf8a-ab990055a6a6\",\"name\":\"Cabinet 2 doors\",\"sku\":\"ca2d123321-x\",\"typeValue\":\"Kitchen.Cabinet.Tall.End.Rectangular-Left.Decorative\",\"classification\":{\"category\":\"Cabinet\",\"content\":\"Kitchen\",\"subCategory\":\"Base Cabinet\"},\"color\":{\"base\":\"Blue\",\"decimalRgb\":\"50,153,204\"},\"quantity\":2,\"unit\":\"PC\",\"valuesTotal\":{\"cost\":1000,\"retailPrice\":1500,\"currency\":\"USD\"},\"catalog\":{\"origin\":\"cic3\",\"id\":\"3ZSB8PHy8_Q\",\"account\":\"Bellmont Cabinet\",\"name\":\"Bellmont 1300 Series Cabinets\",\"version\":\"2.10.12\",\"type\":\"ThirdParty\"},\"dimensions\":{\"unitMetric\":\"mm\",\"width\":1000,\"height\":900,\"depth\":2000},\"featuresAndOptionsInformation\":[{\"featuresAndOptions\":{\"category\":\"Doors\",\"feature\":\"Color\",\"option\":\"Blue\"}}]}}]}"
          }
        },
        "additionalProperties": false
      },
      "PostDesignModel": {
        "required": [
          "object"
        ],
        "type": "object",
        "properties": {
          "object": {
            "minLength": 1,
            "type": "string",
            "description": "Json on string format",
            "example": "{\"designId\":\"{design id}\",\"schemaVersion\":\"1.0\",\"environment\":\"Production\",\"hostname\":\"https://homedepot.com\",\"product\":{\"id\":\"a390b17c-3aa6-4fa8-a6ca-291867c305af\",\"name\":\"{product name, e.g: Ideal Spaces}\",\"version\":\"10\",\"release\":\"9.12\"},\"tagId\":\"DS-1\",\"company\":{\"id\":\"{company id}\",\"name\":\"{company name}\",\"dealerId\":\"{dealer id}\",\"dealerName\":\"{dealer name}\"},\"parentDesignId\":\"{parent design id}\",\"parentLoginId\":\"{parent login id}\",\"creation\":\"2021-05-24 15:50:55+02:00\",\"customer\":{\"id\":\"{customer id}\",\"name\":\"{customer name}\"},\"space\":\"Kitchen\",\"shape\":\"L-Shapped with Island\",\"situation\":\"In Progress\",\"principal\":true,\"quantities\":{\"timeSecondsSpent\":1150,\"inactiveTimeSecondsSpent\":200,\"saved\":5,\"saveAs\":0,\"renders\":1,\"timeSecondsSpentRenders\":6,\"panoramicImages\":0,\"emailInvitation\":5,\"accessFromEmailInvitation\":2,\"reopen\":8,\"items\":45,\"quotations\":8},\"started\":\"In Store\",\"currentStep\":\"Cabinets Layout\",\"sentEcommerce\":true,\"values\":{\"cost\":10000.55,\"retailPrice\":15000,\"currency\":\"U$\"},\"geoLocalization\":{\"country\":\"Brazil\",\"state\":\"Rio Grande do Sul\",\"city\":\"Caxias do Sul\"}}"
          }
        },
        "additionalProperties": false
      },
      "PostDesignPresetsModel": {
        "required": [
          "object"
        ],
        "type": "object",
        "properties": {
          "object": {
            "minLength": 1,
            "type": "string",
            "description": "Json on string format",
            "example": "{\"designId\":\"{designId id}\",\"schemaVersion\":\"1.0\",\"environment\":\"Production\",\"hostname\":\"https://homedepot.com\",\"product\":{\"id\":\"c66947d1-6713-447e-9cea-087554c37327\",\"name\":\"{product name, e.g: Ideal Spaces}\",\"version\":\"10\",\"release\":\"9.12\"},\"tagId\":\"DS-4\",\"company\":{\"id\":\"{company id}\",\"name\":\"{company name}\"},\"creation\":\"2021-05-24 15:50:55+02:00\",\"geoLocalization\":{\"country\":\"Brazil\",\"state\":\"Rio Grande do Sul\",\"city\":\"Caxias do Sul\"},\"presetsInformation\":[{\"flow\":\"Guided\",\"step\":\"Floor Plan\",\"stepNumber\":1,\"timeSecondsSpent\":3,\"finished\":true,\"space\":\"kitchen\",\"shape\":\"Rectangular with front window\",\"thumbnail\":\"image byte array base64 or url under definition with product team\"}]}"
          }
        },
        "additionalProperties": false
      },
      "PostDesignSearchModel": {
        "required": [
          "object"
        ],
        "type": "object",
        "properties": {
          "object": {
            "minLength": 1,
            "type": "string",
            "description": "Json on string format",
            "example": "{\"schemaVersion\":\"1.0\",\"environment\":\"Production\",\"hostname\":\"https://xxxxxx.com\",\"product\":{\"id\":\"c66947d1-6713-447e-9cea-087554c37327\",\"name\":\"Ideal Spaces\",\"version\":\"10\",\"release\":\"9.12\"},\"tagId\":\"CIC-1\",\"company\":{\"id\":\"eab1e909-49c4-4599-b083-86f912190822\",\"name\":\"Home Depot\"},\"creation\":\"2021-05-24 15:50:55+02:00\",\"expression\":\"string used on the search\",\"itemsSelected\":10,\"catalogsSelected\":5, \"designId\":\"{design id}\", \"userId\":\"{user id}\", \"catalogs\": [{\"origin\": \"CiC3\", \"id\": \"3f3f9b5c-26a5-4914-b6c4-fcd2d0062d7b\", \"name\": \"Waypoint\", \"companyId\": \"cbcf3360-d6f6-4545-9060-5287628ea2d0\", \"companyName\": \"Waypoint Living Spaces Cabinetry\"}],\"geoLocalization\":{\"country\":\"Brazil\",\"state\":\"Rio Grande do Sul\",\"city\":\"Caxias do Sul\"}, \"productConsuming\": {\"id\":\"5132c5cc-decf-4425-879b-5529524ad6fa\", \"name\": \"Ideal Spaces 7\", \"version\": \"1\", \"release\": \"1\"}}"
          }
        },
        "additionalProperties": false
      },
      "PostDesignUsersModel": {
        "required": [
          "object"
        ],
        "type": "object",
        "properties": {
          "object": {
            "minLength": 1,
            "type": "string",
            "description": "Json on string format",
            "example": "{\"designId\":\"{design id}\",\"schemaVersion\":\"1.0\",\"environment\":\"Production\",\"hostname\":\"https://xxxxxx.com\",\"product\":{\"id\":\"c66947d1-6713-447e-9cea-087554c37327\",\"name\":\"{product name, e.g: Ideal Spaces}\",\"version\":\"10\",\"release\":\"9.12\"},\"tagId\":\"DS-2\",\"company\":{\"id\":\"{company id}\",\"name\":\"{company name}\"},\"creation\":\"2021-05-24 15:50:55+02:00\",\"usersInformation\":[{\"userId\":\"{user id}\",\"usertype\":\"PromobId\",\"license\":\"1233210\"},{\"userId\":\"{user id}\",\"usertype\":\"Cognito\",\"license\":\"4893223\"}]}"
          }
        },
        "additionalProperties": false
      },
      "PostLoginModel": {
        "required": [
          "object"
        ],
        "type": "object",
        "properties": {
          "object": {
            "minLength": 1,
            "type": "string",
            "description": "Json on string format",
            "example": "{\"loginId\":\"{Login id}\",\"schemaVersion\":\"1.0\",\"environment\":\"Production\",\"hostname\":\"https://xxxxxxx.com\",\"product\":{\"id\":\"c66947d1-6713-447e-9cea-087554c37327\",\"name\":\"{product name, e.g: Ideal Spaces}\",\"version\":\"10\",\"release\":\"9.12\"},\"tagId\":\"US-1\",\"company\":{\"id\":\"{company id}\",\"name\":\"{company name}\"},\"creation\":\"2021-05-24 15:50:55+02:00\",\"userId\":\"{User id}\",\"userType\":\"PromobId\",\"email\":\"silvio@promob.com\",\"kindUser\":\"End Customer\",\"geoLocalization\":{\"country\":\"Brazil\",\"state\":\"Rio Grande do Sul\",\"city\":\"Caxias do Sul\"},\"userClassification\":\"New\",\"deviceCategory\":\"mobile\",\"operationSystem\":\"android\",\"operationSystemVersion\":\"10\",\"browser\":\"chrome\",\"browserVersion\":\"99\"}"
          }
        },
        "additionalProperties": false
      },
      "PostLogoffModel": {
        "required": [
          "object"
        ],
        "type": "object",
        "properties": {
          "object": {
            "minLength": 1,
            "type": "string",
            "description": "Json on string format",
            "example": "{\"parentLoginId\":\"{parent login id}\",\"schemaVersion\":\"1.0\",\"environment\":\"Production\",\"hostname\":\"https://xxxxxxx.com\",\"product\":{\"id\":\"c66947d1-6713-447e-9cea-087554c37327\",\"name\":\"{product name, e.g: Ideal Spaces}\",\"version\":\"10\",\"release\":\"9.12\"},\"tagId\":\"US-2\",\"company\":{\"id\":\"{company id}\",\"name\":\"{company name}\"},\"creation\":\"2021-05-24 15:50:55+02:00\",\"userId\":\"{User id}\",\"userType\":\"PromobId\",\"timeSecondsSpent\":75,\"sessionSpent\":3}"
          }
        },
        "additionalProperties": false
      },
      "PostOperationModel": {
        "required": [
          "object"
        ],
        "type": "object",
        "properties": {
          "object": {
            "minLength": 1,
            "type": "string",
            "description": "Json on string format",
            "example": "{\"schemaVersion\": \"1.0\",\"environment\": \"Production\",\"hostname\": \"localhost\",\"product\": {\"id\": \"{product id}\",\"name\": \"{product name}\",\"version\": \"12\",\"release\": \"2a8.1\"},\"tagId\": \"OP-1\",\"company\": {\"id\": \"{company id}\",\"name\": \"{company name}\"},\"operationid\": \"4ef09061-4707-4bdd-bf39-bac3f0a06f3e\",\"name\": \"download\",\"creation\": \"2023-03-01 16:50:55+02:00\",\"description\": \"Partial Download - 3 Manufactures - 2.3 GB\",\"totalSizeToInstall\": 852992,\"geoLocalization\": {\"country\": \"India\",\"state\": \"MH\"},\"userId\": \"4370b19f-f3c3-4c1f-a55f-682488351dd8\",\"sessionId\": \"122\",\"status\": \"In Progress\", \"ending\":\"2023-03-01 16:50:55+02:00\", \"failReason\": \"Crash\", \"manufacturers\":[{\"id\": \"294e5d0a-f58c-439b-965b-955a48f466ab\",\"name\": \"9 To 5 Seating\",\"size\": 524288},{\"id\": \"ac3c696c-fafd-4e35-aab9-9d7a3969b577\",\"name\": \"Arc-Com\",\"size\": 208896},{\"id\": \"645d0b0b-4aa9-40d5-b4a0-5a5eafb7b2e0\",\"name\": \"Burch Fabric Group\",\"size\": 17408}]}"
          }
        },
        "additionalProperties": false
      },
      "PostOperationUpdateModel": {
        "required": [
          "object"
        ],
        "type": "object",
        "properties": {
          "object": {
            "minLength": 1,
            "type": "string",
            "description": "Json on string format",
            "example": "{\"schemaVersion\": \"1.0\",\"environment\": \"Production\",\"hostname\": \"localhost\",\"product\": {\"id\": \"{product id}\",\"name\": \"{product name}\",\"version\": \"12\",\"release\": \"2a8.1\"},\"tagId\": \"OP-2\",\"company\": {\"id\": \"{company id}\",\"name\": \"{company name}\"},\"operationid\": \"4ef09061-4707-4bdd-bf39-bac3f0a06f3e\",\"ending\": \"2023-03-01 16:55:55+02:00\",\"status\": \"Done\", \"failReason\": \"Crash\"}"
          }
        },
        "additionalProperties": false
      },
      "PostUXEventModel": {
        "required": [
          "object"
        ],
        "type": "object",
        "properties": {
          "object": {
            "minLength": 1,
            "type": "string",
            "description": "Json on string format",
            "example": "{\"schemaVersion\":\"1.0\",\"environment\":\"Production\",\"hostname\":\"https://xxxxxx.com\",\"product\":{\"id\":\"c66947d1-6713-447e-9cea-087554c37327\",\"name\":\"Ideal Spaces\",\"version\":\"10\",\"release\":\"9.12\"},\"event\":\"click\",\"componentName\":\"btnQuotes\",\"description\":\"Open modal quotes\",\"eventValue\":\"\",\"url\":\"www.xxxx.com/yyyyyy\",\"designId\":\"\",\"userId\":\"\",\"tagId\":\"UX-1\",\"company\":{\"id\":\"companyID\",\"name\":\"company Name\"},\"descriptionParent\":\"status\",\"componentLocation\":\"other\"}"
          }
        },
        "additionalProperties": false
      },
      "RequestGeolocationModel": {
        "type": "object",
        "properties": {
          "country": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "ip": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequestSessionTokenModelAPI": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "geolocation": {
            "$ref": "#/components/schemas/RequestGeolocationModel"
          },
          "release": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "acceptedCookies": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "RequestTokenModelAPI": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "geolocation": {
            "$ref": "#/components/schemas/RequestGeolocationModel"
          },
          "acceptedCookies": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SessionTokenValue": {
        "type": "object",
        "properties": {
          "sessionToken": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Token": {
        "type": "object",
        "properties": {
          "authenticated": {
            "type": "boolean"
          },
          "created": {
            "type": "string",
            "nullable": true
          },
          "expiration": {
            "type": "string",
            "nullable": true
          },
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateDesignAddPresetsInformationModel": {
        "required": [
          "object"
        ],
        "type": "object",
        "properties": {
          "object": {
            "minLength": 1,
            "type": "string",
            "description": "Json on string format",
            "example": "{\"designId\":\"{design id}\",\"schemaVersion\":\"1.0\",\"environment\":\"Production\",\"hostname\":\"https://homedepot.com\",\"product\":{\"id\":\"c66947d1-6713-447e-9cea-087554c37327\",\"name\":\"{product name}\",\"version\":\"10\",\"release\":\"9.12\"},\"tagId\":\"DS-11\",\"company\":{\"id\":\"{company id}\",\"name\":\"{company name}\"},\"creation\":\"2021-05-24 15:50:55+02:00\",\"presetsInformation\":[{\"flow\":\"Guided\",\"step\":\"Floor Plan\",\"stepNumber\":1,\"timeSecondsSpent\":3,\"finished\":true,\"space\":\"kitchen\",\"shape\":\"Rectangular with front window\",\"thumbnail\":\"image byte array base64 or url\"},{\"flow\":\"Guided\",\"step\":\"Floor Plan\",\"stepNumber\":2,\"timeSecondsSpent\":3,\"finished\":true,\"space\":\"kitchen\",\"shape\":\"Rectangular with front window\",\"thumbnail\":\"image byte array base64 or url\"}]}"
          }
        },
        "additionalProperties": false
      },
      "UpdateDesignAddUserModel": {
        "required": [
          "object"
        ],
        "type": "object",
        "properties": {
          "object": {
            "minLength": 1,
            "type": "string",
            "description": "Json on string format",
            "example": "{\"designId\":\"{design id}\",\"schemaVersion\":\"1.0\",\"environment\":\"Production\",\"hostname\":\"https://homedepot.com\",\"product\":{\"id\":\"c66947d1-6713-447e-9cea-087554c37327\",\"name\":\"{product name}\",\"version\":\"10\",\"release\":\"9.12\"},\"tagId\":\"DS-9\",\"company\":{\"id\":\"{company id}\",\"name\":\"{company name}\"},\"creation\":\"2021-05-24 15:50:55+02:00\",\"userInformation\":{\"userId\":\"{user id}\",\"userType\":\"PromobId\",\"license\":\"1233210\"}}"
          }
        },
        "additionalProperties": false
      },
      "UpdateDesignCurrentStepModel": {
        "required": [
          "object"
        ],
        "type": "object",
        "properties": {
          "object": {
            "minLength": 1,
            "type": "string",
            "description": "Json on string format",
            "example": "{\"designId\":\"{design id}\",\"schemaVersion\":\"1.0\",\"environment\":\"Production\",\"hostname\":\"https://homedepot.com\",\"product\":{\"id\":\"c66947d1-6713-447e-9cea-087554c37327\",\"name\":\"{product name}\",\"version\":\"10\",\"release\":\"9.12\"},\"tagId\":\"DS-7\",\"company\":{\"id\":\"{company id}\",\"name\":\"{company name}\"},\"creation\":\"2021-05-24 15:50:55+02:00\",\"currentStep\":\"Cabinets Layout\"}"
          }
        },
        "additionalProperties": false
      },
      "UpdateDesignCustomerModel": {
        "required": [
          "object"
        ],
        "type": "object",
        "properties": {
          "object": {
            "minLength": 1,
            "type": "string",
            "description": "Json on string format",
            "example": "{\"designId\":\"{design id}\",\"schemaVersion\":\"1.0\",\"environment\":\"Production\",\"hostname\":\"https://homedepot.com\",\"product\":{\"id\":\"c66947d1-6713-447e-9cea-087554c37327\",\"name\":\"{product name}\",\"version\":\"10\",\"release\":\"9.12\"},\"tagId\":\"DS-7\",\"company\":{\"id\":\"{company id}\",\"name\":\"{company name}\"},\"creation\":\"2021-05-24 15:50:55+02:00\",\"customer\":{\"id\":\"{customer id}\",\"name\":\"{customer name}\"}}"
          }
        },
        "additionalProperties": false
      },
      "UpdateDesignItemsModel": {
        "required": [
          "object"
        ],
        "type": "object",
        "properties": {
          "object": {
            "minLength": 1,
            "type": "string",
            "description": "Json on string format",
            "example": "{\"designId\":\"{design id}\",\"schemaVersion\":\"1.0\",\"environment\":\"Production\",\"hostname\":\"https://homedepot.com\",\"product\":{\"id\":\"c66947d1-6713-447e-9cea-087554c37327\",\"name\":\"{product name, e.g: Ideal Spaces}\",\"version\":\"10\",\"release\":\"9.12\"},\"tagId\":\"DS-10\",\"company\":{\"id\":\"{company id}\",\"name\":\"{company name}\"},\"creation\":\"2021-05-24 15:50:55+02:00\",\"itemsInformation\":[{\"item\":{\"id\":\"c0cc4f8b-8b09-44ee-8c73-20b4b3e38e43\",\"name\":\"Cabinet 2 doors\",\"sku\":\"ca2d123321-x\",\"typeValue\":\"Kitchen.Cabinet.Tall.End.Rectangular-Left.Decorative\",\"classification\":{\"category\":\"Cabinet\",\"content\":\"Kitchen\",\"subCategory\":\"Base Cabinet\"},\"color\":{\"base\":\"Blue\",\"decimalRgb\":\"50,153,204\"},\"quantity\":2,\"unit\":\"PC\",\"valuesTotal\":{\"cost\":1000,\"retailPrice\":1500,\"currency\":\"USD\"},\"catalog\":{\"origin\":\"cic3\",\"id\":\"3ZSB8PHy8_Q\",\"account\":\"Bellmont Cabinet\",\"name\":\"Bellmont 1300 Series Cabinets\",\"version\":\"2.10.12\",\"type\":\"ThirdParty\"},\"dimensions\":{\"unitMetric\":\"mm\",\"width\":1000,\"height\":900,\"depth\":2000},\"featuresAndOptionsInformation\":[{\"featuresAndOptions\":{\"category\":\"Doors\",\"feature\":\"Color\",\"option\":\"Blue\"}}]}}]}"
          }
        },
        "additionalProperties": false
      },
      "UpdateDesignPresetsInformationModel": {
        "required": [
          "object"
        ],
        "type": "object",
        "properties": {
          "object": {
            "minLength": 1,
            "type": "string",
            "description": "Json on string format",
            "example": "{\"designId\":\"{designId id}\",\"schemaVersion\":\"1.0\",\"environment\":\"Production\",\"hostname\":\"https://homedepot.com\",\"product\":{\"id\":\"c66947d1-6713-447e-9cea-087554c37327\",\"name\":\"{product name, e.g: Ideal Spaces}\",\"version\":\"10\",\"release\":\"9.12\"},\"tagId\":\"DS-11\",\"company\":{\"id\":\"{company id}\",\"name\":\"{company name}\"},\"creation\":\"2021-05-24 15:50:55+02:00\",\"geoLocalization\":{\"country\":\"Brazil\",\"state\":\"Rio Grande do Sul\",\"city\":\"Caxias do Sul\"},\"presetsInformation\":[{\"flow\":\"Guided\",\"step\":\"Floor Plan\",\"stepNumber\":1,\"timeSecondsSpent\":3,\"finished\":true,\"space\":\"kitchen\",\"shape\":\"Rectangular with front window\",\"thumbnail\":\"image byte array base64 or url under definition with product team\"}]}"
          }
        },
        "additionalProperties": false
      },
      "UpdateDesignPresetsModel": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "nullable": true,
            "example": "{\"designId\":\"{designId id}\",\"schemaVersion\":\"1.0\",\"environment\":\"Production\",\"hostname\":\"https://homedepot.com\",\"product\":{\"id\":\"c66947d1-6713-447e-9cea-087554c37327\",\"name\":\"{product name, e.g: Ideal Spaces}\",\"version\":\"10\",\"release\":\"9.12\"},\"tagId\":\"DS-11\",\"company\":{\"id\":\"{company id}\",\"name\":\"{company name}\"},\"creation\":\"2021-05-24 15:50:55+02:00\",\"geoLocalization\":{\"country\":\"Brazil\",\"state\":\"Rio Grande do Sul\",\"city\":\"Caxias do Sul\"},\"presetsInformation\":[{\"flow\":\"Guided\",\"step\":\"Floor Plan\",\"stepNumber\":1,\"timeSecondsSpent\":3,\"finished\":true,\"space\":\"kitchen\",\"shape\":\"Rectangular with front window\",\"thumbnail\":\"image byte array base64 or url under definition with product team\"}]}"
          }
        },
        "additionalProperties": false
      },
      "UpdateDesignPrincipalModel": {
        "required": [
          "object"
        ],
        "type": "object",
        "properties": {
          "object": {
            "minLength": 1,
            "type": "string",
            "description": "Json on string format",
            "example": "{\"designId\":\"{design id}\",\"schemaVersion\":\"1.0\",\"environment\":\"Production\",\"hostname\":\"https://homedepot.com\",\"product\":{\"id\":\"c66947d1-6713-447e-9cea-087554c37327\",\"name\":\"{product name}\",\"version\":\"10\",\"release\":\"9.12\"},\"tagId\":\"DS-7\",\"company\":{\"id\":\"{company id}\",\"name\":\"{company name}\"},\"creation\":\"2021-05-24 15:50:55+02:00\",\"principal\":true}"
          }
        },
        "additionalProperties": false
      },
      "UpdateDesignQuantitiesModel": {
        "required": [
          "object"
        ],
        "type": "object",
        "properties": {
          "object": {
            "minLength": 1,
            "type": "string",
            "description": "Is possible update a specific property or all properties of \"Quantities\". At least one property must be sent in the \"Quantities\" object.      \r\nJson on string format",
            "example": "{\"designId\":\"{design id}\",\"schemaVersion\":\"1.0\",\"environment\":\"Production\",\"hostname\":\"https://homedepot.com\",\"product\":{\"id\":\"c66947d1-6713-447e-9cea-087554c37327\",\"name\":\"{product name}\",\"version\":\"10\",\"release\":\"9.12\"},\"tagId\":\"DS-7\",\"company\":{\"id\":\"{company id}\",\"name\":\"{company name}\"},\"creation\":\"2021-05-24 15:50:55+02:00\",\"quantities\":{\"timeSecondsSpent\":1150,\"inactiveTimeSecondsSpent\":200,\"saved\":5,\"saveAs\":0,\"renders\":1,\"timeSecondsSpentRenders\":6,\"panoramicImages\":0,\"emailInvitation\":5,\"accessFromEmailInvitation\":2,\"reopen\":8,\"items\":45,\"quotations\":8}}"
          }
        },
        "additionalProperties": false
      },
      "UpdateDesignSentEcommerceModel": {
        "required": [
          "object"
        ],
        "type": "object",
        "properties": {
          "object": {
            "minLength": 1,
            "type": "string",
            "description": "Json on string format",
            "example": "{\"designId\":\"{design id}\",\"schemaVersion\":\"1.0\",\"environment\":\"Production\",\"hostname\":\"https://homedepot.com\",\"product\":{\"id\":\"c66947d1-6713-447e-9cea-087554c37327\",\"name\":\"{product name}\",\"version\":\"10\",\"release\":\"9.12\"},\"tagId\":\"DS-7\",\"company\":{\"id\":\"{company id}\",\"name\":\"{company name}\"},\"creation\":\"2021-05-24 15:50:55+02:00\",\"sentEcommerce\":true}"
          }
        },
        "additionalProperties": false
      },
      "UpdateDesignSituationModel": {
        "required": [
          "object"
        ],
        "type": "object",
        "properties": {
          "object": {
            "minLength": 1,
            "type": "string",
            "description": "Json on string format",
            "example": "{\"designId\":\"{design id}\",\"schemaVersion\":\"1.0\",\"environment\":\"Production\",\"hostname\":\"https://homedepot.com\",\"product\":{\"id\":\"c66947d1-6713-447e-9cea-087554c37327\",\"name\":\"{product name}\",\"version\":\"10\",\"release\":\"9.12\"},\"tagId\":\"DS-7\",\"company\":{\"id\":\"{company id}\",\"name\":\"{company name}\"},\"creation\":\"2021-05-24 15:50:55+02:00\",\"situation\":\"In Progress\"}"
          }
        },
        "additionalProperties": false
      },
      "UpdateDesignSpaceAndShapeModel": {
        "required": [
          "object"
        ],
        "type": "object",
        "properties": {
          "object": {
            "minLength": 1,
            "type": "string",
            "description": "Json on string format",
            "example": "{\"designId\":\"{design id}\",\"schemaVersion\":\"1.0\",\"environment\":\"Production\",\"hostname\":\"https://homedepot.com\",\"product\":{\"id\":\"c66947d1-6713-447e-9cea-087554c37327\",\"name\":\"{product name}\",\"version\":\"10\",\"release\":\"9.12\"},\"tagId\":\"DS-7\",\"company\":{\"id\":\"{company id}\",\"name\":\"{company name}\"},\"creation\":\"2021-05-24 15:50:55+02:00\",\"space\":\"Kitchen\",\"shape\":\"L-Shapped with Island\"}"
          }
        },
        "additionalProperties": false
      },
      "UpdateDesignStartedModel": {
        "required": [
          "object"
        ],
        "type": "object",
        "properties": {
          "object": {
            "minLength": 1,
            "type": "string",
            "description": "Json on string format",
            "example": "{\"designId\":\"{design id}\",\"schemaVersion\":\"1.0\",\"environment\":\"Production\",\"hostname\":\"https://homedepot.com\",\"product\":{\"id\":\"c66947d1-6713-447e-9cea-087554c37327\",\"name\":\"{product name}\",\"version\":\"10\",\"release\":\"9.12\"},\"tagId\":\"DS-7\",\"company\":{\"id\":\"{company id}\",\"name\":\"{company name}\"},\"creation\":\"2021-05-24 15:50:55+02:00\",\"started\":\"In Store\"}"
          }
        },
        "additionalProperties": false
      },
      "UpdateDesignValuesModel": {
        "required": [
          "object"
        ],
        "type": "object",
        "properties": {
          "object": {
            "minLength": 1,
            "type": "string",
            "description": "Is possible update a specific property or all properties of \"Values\". At least one property must be sent in the \"Values\" object.  \r\nJson on string format",
            "example": "{\"designId\":\"{design id}\",\"schemaVersion\":\"1.0\",\"environment\":\"Production\",\"hostname\":\"https://homedepot.com\",\"product\":{\"id\":\"a390b17c-3aa6-4fa8-a6ca-291867c305af\",\"name\":\"{product name}\",\"version\":\"10\",\"release\":\"9.12\"},\"tagId\":\"DS-7\",\"company\":{\"id\":\"{company id}\",\"name\":\"{company name}\"},\"creation\":\"2021-05-24 15:50:55+02:00\",\"values\":{\"cost\":500.5,\"retailPrice\":1000.9,\"currency\":\"U$\"}}"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme. <br> \n                      Enter 'Bearer' [space] and then your token in the text input below. <br> \n                      Example: 'Bearer 12345abcdef'",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}